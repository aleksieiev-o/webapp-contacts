---
# Source: helm-charts/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: helm-charts
  labels:
    helm.sh/chart: helm-charts-0.1.0
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: helm-charts/templates/backend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: helm-charts-backend
  labels:
    helm.sh/chart: helm-charts-0.1.0
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts-backend
---
# Source: helm-charts/templates/database-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: helm-charts-database
  labels:
    helm.sh/chart: helm-charts-0.1.0
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts-database
---
# Source: helm-charts/templates/frontend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: helm-charts-frontend
  labels:
    helm.sh/chart: helm-charts-0.1.0
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
      nodePort: 30001
  selector:
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts-frontend
---
# Source: helm-charts/templates/backend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-charts-backend
  labels:
    helm.sh/chart: helm-charts-0.1.0
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: helm-charts
      app.kubernetes.io/instance: helm-charts-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: helm-charts
        app.kubernetes.io/instance: helm-charts-backend
    spec:
      serviceAccountName: helm-charts
      securityContext:
        {}
      containers:
        - name: helm-charts-backend
          securityContext:
            {}
          image: "backend-local:latest"
          imagePullPolicy: Never
          ports:
          - name: http
            containerPort: 3000
            protocol: TCP
          env:
          - name: NODE_ENV
            value: development
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "3000"
            # value: 
          - name: DB_HOST
            value: helm-charts-database.default.svc.cluster.local
          - name: DB_PORT
            value: "3306"
            # value: 
          - name: MARIADB_USER
            value: dev
          - name: MARIADB_PASSWORD
            value: root
          - name: MARIADB_DATABASE
            value: contactsdatabase
          - name: MARIADB_ROOT_PASSWORD
            value: root
          livenessProbe:
            initialDelaySeconds: 25
            periodSeconds: 5
            tcpSocket:
              port: 3000
          readinessProbe:
            initialDelaySeconds: 25
            periodSeconds: 5
            tcpSocket:
              port: 3000
          resources:
            {}
---
# Source: helm-charts/templates/database-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-charts-database
  labels:
    helm.sh/chart: helm-charts-0.1.0
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: helm-charts
      app.kubernetes.io/instance: helm-charts-database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: helm-charts
        app.kubernetes.io/instance: helm-charts-database
    spec:
      serviceAccountName: helm-charts
      securityContext:
        {}
      containers:
        - name: helm-charts-database
          securityContext:
            {}
          image: "mariadb:latest"
          imagePullPolicy: IfNotPresent
          ports:
          - name: http
            containerPort: 3306
            protocol: TCP
          env:
          - name: NODE_ENV
            value: development
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "3000"
            # value: 
          - name: DB_HOST
            value: helm-charts-database.default.svc.cluster.local
          - name: DB_PORT
            value: "3306"
            # value: 
          - name: MARIADB_USER
            value: dev
          - name: MARIADB_PASSWORD
            value: root
          - name: MARIADB_DATABASE
            value: contactsdatabase
          - name: MARIADB_ROOT_PASSWORD
            value: root
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            tcpSocket:
              port: 3306
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 5
            tcpSocket:
              port: 3306
          resources:
            {}
---
# Source: helm-charts/templates/frontend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-charts-frontend
  labels:
    helm.sh/chart: helm-charts-0.1.0
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: helm-charts
      app.kubernetes.io/instance: helm-charts-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: helm-charts
        app.kubernetes.io/instance: helm-charts-frontend
    spec:
      serviceAccountName: helm-charts
      securityContext:
        {}
      containers:
        - name: helm-charts-frontend
          securityContext:
            {}
          image: "frontend-local:latest"
          imagePullPolicy: Never
          ports:
          - name: http
            containerPort: 80
            protocol: TCP
          env:
          - name: NODE_ENV
            value: development
          livenessProbe:
            tcpSocket:
              port: 80
          readinessProbe:
            tcpSocket:
              port: 80
          resources:
            {}
---
# Source: helm-charts/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "helm-charts-test-connection"
  labels:
    helm.sh/chart: helm-charts-0.1.0
    app.kubernetes.io/name: helm-charts
    app.kubernetes.io/instance: helm-charts
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ["wget"]
      args: ["helm-charts:80"]
  restartPolicy: Never
