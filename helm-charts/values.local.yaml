database:
  replicaCount: 1
  replication:
    enabled: false
  image:
    repository: mariadb
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: "3306"
  containerPort: "3306"
  env:
    NODE_ENV: development
    HOST: 0.0.0.0
    # PORT: "3000"
    DB_HOST: helm-charts-database.default.svc.cluster.local
    # DB_PORT: "3306"
    MARIADB_USER: dev
    MARIADB_PASSWORD: root
    MARIADB_DATABASE: contactsdatabase
    MARIADB_ROOT_PASSWORD: root
  volumeName: database-volume
  volumeMountPath: /var/lib/mysql
  storage: 1Gi

backend:
  replicaCount: 1
  image:
    repository: backend-local
    tag: latest
    pullPolicy: Never
  service:
    type: ClusterIP
    port: "3000"
  containerPort: "3000"
  env:
    NODE_ENV: development
    HOST: 0.0.0.0
    # PORT: "3000"
    DB_HOST: helm-charts-database.default.svc.cluster.local
    # DB_PORT: "3306"
    MARIADB_USER: dev
    MARIADB_PASSWORD: root
    MARIADB_DATABASE: contactsdatabase
    MARIADB_ROOT_PASSWORD: root

frontend:
  replicaCount: 1
  image:
    repository: frontend-local
    tag: latest
    pullPolicy: Never
  service:
    type: NodePort
    port: "80"
    nodePort: "30001"
  containerPort: "80"
  env:
    NODE_ENV: development

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: contacts-app-local
      paths:
        - path: /
          pathType: Prefix
          backend:
              service:
                name: helm-charts-frontend
                port:
                  number: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
